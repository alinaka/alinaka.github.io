---
layout: post
permalink: "/big-o-notation"
title:  "Что такое Big O и для чего оно используется?"
date:   2019-06-14 16:02:34 +0300
categories: algorithms
---
Чтобы начать разбираться в терминах большого О, нужно сначала понять, что такое алгоритмы,
зачем их изучать, и какие задачи они решают.

Алгоритм - это некая последовательность действий для выполнения определенной задачи.
В программировании существует множество задач, для решения которых не нужно знание алгоритмов, например, 
вывести текст на экран, сложить два числа, найти максимум в массиве, прочитать файл. 
Для некоторых задач, которые и называют алгоритмическими,  эффективный алгоритм не совсем очевиден.
Примеры таких задач:
- найти кратчайший путь между двумя точками на карте
- построить оптимальное расписание
- разложить число на множители

При решении подобных задач не совсем понятно, с чего начать, как оценить эффективность найденного решения, 
и обычно для таких задач наивный алгоритм оказывается неэффективным и слишком медленным.

Так как у  различных алгоритмов различное время работы, и конкретная реализация алгоритма 
и точное время работы будет зависеть от многих вещей. Необходим способ измерения, не зависящий от факторов вроде 
аппаратного обесечения, операционной системы, и т.п.
В частности О большое используется для оценки времени работы алгоритмов.

`O(T(n))`,

где `T(n)` - это функция, которая показывает, как растет время выполнения алгоритма при росте размера входных данных.

`O` означает, что при больших входных данных, время выполнения растет не быстрее, чем функция в скобках.
`О` большое при этом ничего не говорит о работе алгоритма с небольшими входными данными.
Таким образом, `О` предоставляет возможности упрощенного анализа времени работы алгоритма, т.к. отбрасывает 
константные множители и медленно растущие слагаемые, и не зависит от машины, на которой запускается алгоритм.

Часто используемые функции в порядке увеличения скорости роста.

![log n](https://latex.codecogs.com/svg.latex?%5Clog%20n)
< ![square root of n](https://latex.codecogs.com/svg.latex?%5Csqrt%7Bn%7D)
< ![linear function](https://latex.codecogs.com/svg.latex?n)
< ![n log n](https://latex.codecogs.com/svg.latex?n%20%5Clog%20n)
< ![square function](https://latex.codecogs.com/svg.latex?n%5E%7B2%7D)
< ![exponential function](https://latex.codecogs.com/svg.latex?2%5E%7Bn%7D)
